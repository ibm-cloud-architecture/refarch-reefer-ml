# CloudPak for Data credentials for the predictive model
cp4d_user=
cp4d_pwd=
cp4d_base_url=
cp4d_prediction_url=


# Config specific to reeferTelemetry kafka topic
mp.messaging.incoming.reeferTelemetry.connector=liberty-kafka
mp.messaging.incoming.reeferTelemetry.group.id=reeferTelemetry-reactive
mp.messaging.incoming.reeferTelemetry.topic=reeferTelemetry
mp.messaging.incoming.reeferTelemetry.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.reeferTelemetry.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Config specific to containers kafka topic
mp.messaging.outgoing.containers.connector=liberty-kafka
mp.messaging.outgoing.containers.group.id=containers-reactive
mp.messaging.outgoing.containers.topic=containers
mp.messaging.outgoing.containers.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.containers.value.serializer=org.apache.kafka.common.serialization.StringSerializer

#### Config shared between all kafka connections
#
# This is currently added in bootstrap.properties due to https://github.com/OpenLiberty/open-liberty/issues/10575
#
# bootstrap server is the only config needed for plain insercure local kafka instance
#mp.messaging.connector.liberty-kafka.bootstrap.servers=

# If connecting to Event Streams on IBM Cloud or to any Kafka deployment with SSL security
# mp.messaging.connector.liberty-kafka.security.protocol=SASL_SSL
# mp.messaging.connector.liberty-kafka.ssl.protocol=TLSv1.2
# mp.messaging.connector.liberty-kafka.sasl.mechanism=PLAIN
# Make sure you set the username and API key at the end
# mp.messaging.connector.liberty-kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="<USERNAME>" password="<API_KEY>";

# If connecting to Event Streams in OpenShift that requires certificates
# Location for the truststore within the container
# mp.messaging.connector.liberty-kafka.ssl.truststore.location=
# Password for the truststore
# mp.messaging.connector.liberty-kafka.ssl.truststore.password=
